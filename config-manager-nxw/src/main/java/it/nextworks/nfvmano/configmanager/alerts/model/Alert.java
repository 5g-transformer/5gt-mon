/*
* Copyright 2018 Nextworks s.r.l.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*
 * Prometheus Manager API
 * The API of the Prometheus Manager.
 *
 * OpenAPI spec version: 0.1
 * Contact: m.capitani@nextworks.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.nfvmano.configmanager.alerts.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.Objects;

/**
 * Alert
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-03T15:45:45.203+02:00")
public class Alert {
    @JsonProperty("alertId")
    private String alertId = null;

    @JsonProperty("query")
    private String query = null;

    @JsonProperty("value")
    private Double value = null;
    @JsonProperty("kind")
    private KindEnum kind = null;

    public Alert alertId(String alertId) {
        this.alertId = alertId;
        return this;
    }

    /**
     * the ID assigned to the alert
     *
     * @return alertId
     **/
    public String getAlertId() {
        return alertId;
    }

    public void setAlertId(String alertId) {
        this.alertId = alertId;
    }

    public Alert query(String query) {
        this.query = query;
        return this;
    }

    /**
     * the query whose value should be monitored. See https://prometheus.io/docs/prometheus/latest/querying/basics/ for details
     *
     * @return query
     **/
    public String getQuery() {
        return query;
    }

    public void setQuery(String query) {
        this.query = query;
    }

    public Alert value(Double value) {
        this.value = value;
        return this;
    }

    /**
     * the value associated to the threshold
     *
     * @return value
     **/
    public Double getValue() {
        return value;
    }

    public void setValue(Double value) {
        this.value = value;
    }

    public Alert kind(KindEnum kind) {
        this.kind = kind;
        return this;
    }

    /**
     * the kind of inequality the query should satisfy related to the value
     *
     * @return kind
     **/
    public KindEnum getKind() {
        return kind;
    }

    public void setKind(KindEnum kind) {
        this.kind = kind;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Alert alert = (Alert) o;
        return Objects.equals(this.alertId, alert.alertId) &&
                Objects.equals(this.query, alert.query) &&
                Objects.equals(this.value, alert.value) &&
                Objects.equals(this.kind, alert.kind);
    }

    @Override
    public int hashCode() {
        return Objects.hash(alertId, query, value, kind);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Alert {\n");

        sb.append("    alertId: ").append(toIndentedString(alertId)).append("\n");
        sb.append("    query: ").append(toIndentedString(query)).append("\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * the kind of inequality the query should satisfy related to the value
     */
    public enum KindEnum {
        G("g"),

        GEQ("geq"),

        L("l"),

        LEQ("leq"),

        EQ("eq"),

        NEQ("neq");

        private String value;

        KindEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static KindEnum fromValue(String text) {
            for (KindEnum b : KindEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }
}

